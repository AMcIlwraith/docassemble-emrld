---
metadata:
  title: |
    EMRLD: Electronic Means for Renter & Landlord Disputes
  short title: |
    EMRLD
  tab title: |
    EMRLD
  description: |
    A guided interview to help renters fill out the forms used by the Residential Tenancies Dispute Resolution Service (RTDRS) in Alberta.
  right: |
    ![Markdown logo](https://cloudfront.ualberta.ca/-/media/toolkit/guideline-graphics/ua-colour.jpg?w=300)
    ![Markdown logo](https://www.eclc.ca/wp-content/themes/clg-edmonton/img/logo-new.gif)
  authors:
    - name: LAW 599 Coding the Law
      organization: University of Alberta Faculty of Law
---
auto terms: 
    RTA: |
      The Residential Tenancies Act is the law that talks about the rights and responsibilities of renters and landlords.
    tenant: |
      This is you.
---
modules:
  - docassemble.base.core
  - docassemble.base.util
---
objects:
  - tenants: DAList.using(object_type=Individual, complete_attribute="complete",there_are_any=True)
  - landlord: DAList.using(object_type=Individual, complete_attribute="complete", there_are_any=True)
  - witness: DAList.using(object_type=Individual)
---
mandatory: true
code:  |
## INTERVIEW FLOW BLOCK
  rta_applies
  remedy
  if (remedy == “abatement”) or (remedy == “damages) or (remedy == compensation") or (remedy == "deposit"):
    terminated_yes
  tenants.gather()
  landlord.gather()
  rental_address
  made_court_application
  served_court_application
  served_rtdrs
  rtdrs_case_number
## SECTION A
  rental_premises_type
## SECTION B
  if remedy == “termination”:
    termination
    termination_date
    termination_text
    termination_served
## SECTION C
  if remedy == “abatement”:  
    abatement_text
    abatement_claim
## SECTION D
  if remedy == “damages”:
    damages_text
    damages_claim
## SECTIONS E,F,G
  if remedy == “compensation”:
    compensation_text
    compensation_claim
  if (remedy == “deposit”) and (security_deposit > 0):
    paid_back
    if paid_back == "paid_back_some":
      some_paid
    if (paid_back == "paid_back_all") or (paid_back == "paid_back_some"):
      date_paid
    move_in
    if terminated_yes:
      move_out
    statement
    if recovery_claim > 0:
      recovery_text
      sd_owed_correct
  file_fee
  other_costs
  if other_costs:
    costs_claim
    costs_text
  total_claim_correct
## WITNESSES
  witness.gather()
  witnesses_confirmed
  claim_more_than_max
  tenants[0].signature
---
code: |
  if i==0:
     tenants[i].name.first
     tenants[i].address
     tenants[i].city
     tenants[i].province
     tenants[i].zip
     tenants[i].phone_number
     tenants[i].fax
     tenants[i].email
     tenants[i].complete = True
  else:
     tenants[i].name.first
     tenants[i].name.last
     tenants[i].complete = True
---
code: |
 landlord[i].name.first
 landlord[i].address
 landlord[i].city
 landlord[i].province
 landlord[i].zip
 landlord[i].phone_number
 landlord[i].fax
 landlord[i].email
 landlord[i].complete = True
---
## Test code for a table.
---
table: tenants.table
rows: tenants
columns: 
  - Name: row_item
edit:
  - name.first
  - name.last
---
##
## Check to see if the RTA applies to the user
##
---
question: |
  The RTA won't apply if you are in any of the living situationss described below.
subquestion: |
  Do any of these describe the place you are filing this complaint about?
field: rta_applies
choices:
  - a mobile home site?: mobile
  - an apartment connected to a business but you rent the whole space as one?: business
  - a hotel room, room in a bed and breakfast, or a cabin in a campground where you have stayed less than six months?: hotel
  - a residence on campus where you do not have your own kitchen and bathroom?: campus
  - in a nursing home?: nursing
  - in a seniors' lodge?: lodge
  - in a supportive housing building?: supportive
  - in a halfway house?: halfway
  - renting a room and sharing the kitchen, bathroom or living room with your landlord?: share
  - none of these fit: none
---
code: |
  if rta_applies == "none":
    rta_applicable
  else:
    rta_not_applicable
---
question: |
  The RTA applies to your situation. 
subquestion: |
  Are you ready to proceed?
buttons:
  - Let's get started: proceed
event: rta_applicable
---
question: |
  Sorry, the RTA does not apply in your case.
buttons:
  - Exit: exit
  - Start Again: restart
event: rta_not_applicable
---
##
## Asks the user which remedy they are seeking
## Should trigger the appropriate sections to be asked
##
---
question: |
  What issue are you are currently having with your rental?
subquestion: |
  You can pick more than one.
field: remedy
choices:
  - I need to end my rental: termination
  - I want to continue to rent but I want to pay less rent: abatement
  - The landlord broke our agreement and cost me money: damages
  - I had to do something my landlord was supposed to do and I want to be repaid: compensation
  - I want to get my security deposit back: deposit
---
question: |
  Has this rental already ended, or are you still renting?
field: terminated_yes
buttons:
  - "It has ended": True
  - "It is still going": False
---
code: |
  if remedy == "termination":
    terminated_yes = False
---
question: | 
  % if i ==0:
    Please give us your information.
  % else:
    Tell us about the ${ordinal(i)} tenant.
  % endif
fields:
  - First Name: tenants[i].name.first 
  - Last Name: tenants[i].name.last
---
question: |
  Tell us some more about you.
fields:
  - Phone Number: tenants[i].phone_number
    required: false
  - Email: tenants[i].email
    required: false
    datatype: email
  - Fax: tenants[i].fax
    required: false
  - Suite Number: tenants[i].unit
    required: false
  - Street Address: tenants[i].address
  - City: tenants[i].city
  - Province: tenants[i].province
    default: "AB"
  - Postal Code: tenants[i].zip
---
question: | 
  Were there any other people living at the rental address?  
   ${tenants.table}
    ${tenants.add_action() }

subquestion: |
  All done?
noyes: tenants.there_is_another
---
question: |
  % if i==0:  
    Please give us some information about your landlord.  
    
    If you have more than one, we'll ask you for their information afterward.
  % else:
    Tell us about the ${ordinal(i)} landlord.
  % endif
fields:
  - First Name: landlord[i].name.first 
  - Last Name: landlord[i].name.last
  - Phone Number: landlord[i].phone_number
    required: false
  - Email: landlord[i].email
    required: false
    datatype: email
  - Fax: landlord[i].fax
    required: false
  - Suite Number: landlord[i].unit
    required: false
  - Street Address: landlord[i].address
  - City: landlord[i].city
  - Province: landlord[i].province
    default: "AB"
  - Postal Code: landlord[i].zip
---
question: | 
  Do you have another landlord?
yesno: landlord.there_is_another
---
question: |
  What is the address of your rental?
fields:
  - Street Address: rental_address
    default: ${tenants[0].address}
  - City: rental_city
    default: ${tenants[0].province}
  - Postal Code: rental_zip
    default: ${tenants[0].zip}
---
question: |
  How much did you pay as a security deposit for this rental?
subquestion: |
  If you didn't pay any security deposit, enter 0.
fields:
  - Security deposit: security_deposit
    datatype: currency
    min: 0
---
question: |
 Have you made an application with the Provincial Court or Court of Queen’s Bench on this matter?
yesno: made_court_application
---
question: |
  Have you been served with a Provincial or Court of Queen’s Bench application on this matter?   
yesno: served_court_application
---
mandatory: true
question: |
  Have you ever had an RTDRS application at this rental before?
fields:
  - Yes or No: served_rtdrs
    choices:
    - Yes
    - No
  - Previous application number: rtdrs_case_number
    show if:
      variable: served_rtdrs
      is: Yes
---
## SECTION A GENERAL
##
##
##
---
question: |
  What sort of place are you renting? / did you rent?
fields: 
  - Type of Premises: rental_premises_type
    choices:
      - House: house
      - Main floor of a house: main_floor
      - Basement suite: basement
      - Room: room
      - Apartment: apartment
      - Townhouse: townhouse
      - Other: other
  - Other type of premises: rental_premises_type
    show if:
      variable: rental_premises_type
      is: other
---
 ## SECTION B
## TERMINATION OF TENANCY 
##
##
---
question: |
  Do you want to terminate your tenancy?
yesno: termination
---
question: |
  On what date would you like to terminate your tenancy?
fields:
  - Date of Termination: termination_date
    datatype: date
---
question: |
  What is your reason for wanting to terminate your tenancy?
fields:
  - Explain here: termination_text 
---
question: |
  Did you give your landlord a notice?
yesno: termination_served
---
## SECTION C
## Abatement section
##
##
---
question: |
  Why do you think you should be paying less rent?
fields:
  - Explain here: abatement_text
    datatype: area
---
question: |
  How much extra money have you paid?
fields:
  - Value: abatement_claim
    datatype: currency
    min: 0
---
## SECTION D
## Damages section
##
##
---
question: |
  What harm did the landlord cause you? What did they do to make this happen?
fields:
  - Explain here: damages_text
    datatype: area
---
question: |
  How much money did the landlord cost you?
fields:
  - Value: damages_claim
    datatype: currency
    min: 0
---
## SECTION E
## Compensation section
##
##
---
question: |
  What did you do that the landlord should have done?
fields:
  - Explain here: compensation_text
    datatype: area
---
question: |
  How much did you spend on doing things that the landlord should have done?
fields:
  - Value: compensation_claim
    datatype: currency
    min: 0
---
## SECTION F
## Security Deposit
## This should probably be a variable section where it’s only shown if security_deposit has a value greater than zero AND if the tenancy has ended
---
question: |
  Now we’re going to ask about the security deposit. 
subquestion: |
  You told us that you gave the landlord a deposit of $${ security_deposit }. 
  Has the landlord paid back the deposit?
field: paid_back
choices:
  - They have paid back all of the deposit: paid_back_all
  - They have paid back only some of the deposit: paid_back_some
  - They have not paid back any of the deposit: paid_back_none
---
question: |
  How much of the security deposit did they pay back?
fields:
  - Value: some_paid
    datatype: currency
    min: 0
---
question: |
  When did the landlord pay back the deposit?
fields: 
  - Date paid back: date_paid
    datatype: date
---
question: |
  Was there a move-in inspection done?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: move_in
---
question: |
  Was there a move-out inspection done?
subquestion: |
  You'll need to attach the form for this inspection.
yesno: move_out
---
question: |
  Did the landlord provide you a **Statement of Account** for your security deposit?
subquestion: |
  You'll need to attach this statement, if you have it. 
yesno: statement
---
code: |
  if paid_back == "paid_back_some":
    recovery_claim = security_deposit - some_paid
  elif paid_back == "paid_back_none":
    recovery_claim = security_deposit
  elif paid_back == "paid_back_all":
    recovery_claim = 0
---
question: |
  Please explain why the security deposit should be paid back to you.
fields:
  - Explain here: recovery_text
    datatype: area
---
question: |
  The landlord owes you $ ${ recovery_claim } back for the security deposit.  
subquestion: |
  Is that correct?
yesno: sd_owed_correct
---
## SECTION G
## Costs section
##
##
---
question: |
  Should the landlord be required to pay the $75 fee to file this form?
yesno: file_fee
---
question: |
  Have you spent any other money to file this form that you think the landlord should be required to pay?
yesno: other_costs
---
question: |
  How much have you spent to file this form that you think the landlord should pay?
fields:
  - Filing costs: costs_claim
    datatype: currency
    min: 0
---
question: |
  Explain how you spent any other money to file this form that you think the landlord should be required to pay
fields:
  - Explain here: costs_text
    datatype: area
---
code: |
  if file_fee:
    total_claim = costs_claim + abatement_claim + damages_claim + recovery_claim + 75
  else:
    total_claim = costs_claim + abatement_claim + damages_claim + recovery_claim
---
question: |
  By our calculations, your total claim is $ ${ total_claim }.
subquestion: |
  Is this correct?
yesno: total_claim_correct  
---
## WITNESS SECTION
##
##
---
question: |
  Will you be calling any witnesses to give evidence?
yesno: witness.there_are_any
---
question: |
  What is the name of your ${ ordinal(i) } witness?
fields:
  - First Name: witness[i].name.first
  - Last Name: witness[i].name.last
---
question: |
  Do you have any other witnesses?
yesno: witness.there_is_another
---
question: |
  % if witness.there_are_any:
  Thank you, you've listed the following people as witnesses:
  ${ witness }
  % else:
  You are not calling any witnesses.
  % endif
subquestion: Is this right?
yesno: witnesses_confirmed
---
question: |
 You can only claim amounts less than $50,000 using this form. If you feel like you're owed more money than this, you won't be able to get it if you file this form.
subquestion: |
 Are you trying to claim more than $50,000?
yesno: claim_more_than_max
---
if claim_more_than_max:
question: |
  Please talk to someone from ECLC before finishing this form.
subquestion: |
  You may not be able to claim the full amount that you want to.
exit: Exit
---
if not claim_more_than_max:
question:  |
  You're all done
subquestion: |
  Please sign below to confirm that all of the information that you've provided is true and correct.
  Today's date is ${ today() }.
signature: tenants[0].signature
---
mandatory: true
question: |
  Your document is ready.
subquestion: |
  Thank you for using this interview.
buttons:
  - Exit: exit
  - Restart: restart
attachments:
  - name: RTDRS Application
    filename: RTDRS_Application
    pdf template file: rtdrs-form2.pdf
    fields: 
      "remedy": ${ remedy }
      "tenant.name": ${ tenant[0].name } 
      "tenant.address": ${ tenant[0].address }
      "tenant.city": ${ tenant[0].city }
      "tenant.province": ${ tenant[0].province }
      "tenant.zip": ${ tenant[0].zip }
      "tenant.fax": ${ tenant[0].fax }
      "tenant.email": ${ tenant[0].email }
      "tenant.phone": ${ tenant[0].phone }
      "landlord.name": ${ landlord[0].name }
      "landlord.address": ${ landlord[0].address }
      "landlord.province": ${ landlord[0].province }
      "landlord.city": ${ landlord[0].city }
      "landlord.zip": ${ landlord[0].zip }
      "landlord.email": ${ landlord[0].email }
      "landlord.phone": ${ landlord.phone }
      "landlord.fax": ${ landlord[0].fax }
      "rental.city": ${ rental.city }
      "rental.zip": ${ rental.zip }
      "rental.address": ${ rental.address }
      "made_court_application": ${ made_court_application }
      "served_court_application": ${ served_court_application }
      "served_rtdrs": ${ served_rtdrs }
      "rtdrs_case_number": ${ rtdrs_case_number }
      "rental_premises_type": ${ rental_premises_type }
      "other_premises_type": ${ other_premises_type }
      "rent": ${ rent }
      "security_deposit": ${ security_deposit }
      "other_term": ${ other_term }
      "tenancy_type": ${ tenancy_type }
      "tenancy_agreement": ${ tenancy_agreement }
      "tenancy_start": ${ tenancy_start }
      "residing": ${ residing }
      "vacated_date": ${ vacated_date }
      "previous_order": ${ previous_order }
      "termination_date": ${ termination_date }
      "termination_text": ${ termination_text }
      "termination_served": ${ termination_served }
      "abatement_text": ${ abatement_text }
      "abatement_claim": ${ abatement_claim }
      "damages_text": ${ damages_text }
      "damages_claim": ${ damages_claim }
      "compensation_text": ${ compensation_text }
      "compensation_claim": ${ compensation_claim }
      "date_paid": ${ date_paid }
      "paid_back_none": ${ paid_back_none }
      "move_in": ${ move_in }
      "move_out": ${ move_out }
      "statement": ${ statement }
      "deposit_reason": ${ deposit_reason }
      "deposit_claim": ${ deposit_claim }
      "file_fee": ${ file_fee }
      "other_costs": ${ other_costs }
      "costs_text": ${ costs_text }
      "costs_claim": ${ costs_claim }
      "total_claim": ${ total_claim }
      "witness.there_are_any": ${ witnessthere_are_any }
      "witness.name": ${ witnessname }
---